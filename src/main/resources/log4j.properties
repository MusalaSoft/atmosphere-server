################################################################################
# Configuration file with properties for all loggers on the Server side
################################################################################
log4j.rootLogger = ALL,atmosphereServerLoggerAppender1, stdout

################################################################################
# atmosphereServerLoggerAppender1 settings:
################################################################################
# Attach logger's appender to write in a (log) File
log4j.appender.atmosphereServerLoggerAppender1=org.apache.log4j.FileAppender

# Add the path where to create the log file
log4j.appender.atmosphereServerLoggerAppender1.File=Server.log

# If 'true' then every time this logger is opened, it will append the new logger messages in the end of the existing log.
# If 'false' before every time this logger is opened, the log file will be cleared of all its content and AFTER THAT the logger
# will write new messages from the current execution ( bad, if we want to keep old logs ).
log4j.appender.atmosphereServerLoggerAppender1.Append=true

# Setting the format of messages of the logger atmosphereServerLoggerAppender1
log4j.appender.atmosphereServerLoggerAppender1.layout=org.apache.log4j.PatternLayout
log4j.appender.atmosphereServerLoggerAppender1.layout.conversionPattern=%l %d{dd MMM yyyy HH:mm:ss} - %m%n

# Setting the format of messages of the logger stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.conversionPattern=%d{dd MMM yyyy HH:mm:ss} - %m%n

# Setting logger's level for database related tools
log4j.logger.com.j256.ormlite=ERROR
log4j.logger.org.flywaydb=ERROR

# Levels in log4j ( in increasing order ) are:
# ALL, / TRACE, DEBUG, INFO, WARN, ERROR, FATAL, / OFF
